Terminals unused in grammar

   ARRAYED_LIST
   OSB
   CSB
   REQUIRE
   ENSURE
   KEYWORD
   PIPEDOTS


State 51 conflicts: 13 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: class_declaration

    2 class_declaration: CLASS IDENTIFIER inside_class END

    3 inside_class: %empty
    4             | create_declaration features_declaration

    5 create_declaration: CREATE IDENTIFIER

    6 features_declaration: %empty
    7                     | features_declaration feature_declaration

    8 feature_declaration: FEATURE inside_feature

    9 inside_feature: %empty
   10               | IDENTIFIER function_head inside_function inside_feature
   11               | IDENTIFIER function_head if_return inside_function inside_feature

   12 function_head: %empty
   13              | OP container CP

   14 inside_function: %empty
   15                | DO code_section END

   16 container: %empty
   17          | IDENTIFIER if_return SEMICOLON container
   18          | IDENTIFIER if_return container

   19 if_return: COLON DATATYPE

   20 code_section: code_section_in
   21             | code_section_in code_section

   22 code_section_in: condition
   23                | inspect_structure
   24                | loops
   25                | variable_assignment
   26                | print_function

   27 print_function: PRINT OP inside_print CP

   28 inside_print: possible_inside_print
   29             | possible_inside_print ADD inside_print

   30 possible_inside_print: string_literal
   31                      | IDENTIFIER

   32 condition: if-condition elseif-condition else-condition END

   33 variable_assignments: %empty
   34                     | variable_assignments variable_assignment

   35 variable_assignment: IDENTIFIER ASSIGN expr
   36                    | IDENTIFIER ASSIGN string_literal

   37 statement: bool_exp
   38          | comp_exp

   39 if-condition: IF statement THEN code_section

   40 elseif-condition: %empty
   41                 | elseif-condition ELSEIF statement THEN code_section

   42 else-condition: %empty
   43               | ELSE code_section

   44 inspect_structure: INSPECT expr when_part_list ELSE code_section END

   45 when_part_list: %empty
   46               | when_part_list when_part

   47 when_part: WHEN choices THEN code_section

   48 choices: literals
   49        | literals COMMA choices
   50        | literals DOTS literals

   51 loops: FROM variable_assignment variable_assignments top_loop UNTIL statement LOOP code_section bottom_loop END

   52 top_loop: %empty
   53         | invariant_contracts

   54 bottom_loop: %empty
   55            | variant_contracts

   56 comp_operator: GT
   57              | GTEQ
   58              | LT
   59              | LTEQ
   60              | EQUAL

   61 literals: integer_literal
   62         | real_literal
   63         | string_literal
   64         | double_literal
   65         | character_literal
   66         | boolean_literal

   67 integer_literal: INTEGER

   68 real_literal: REAL

   69 string_literal: STRING

   70 double_literal: DOUBLE

   71 character_literal: CHARACTER

   72 boolean_literal: BOOLEAN

   73 invariant_contracts: INVARIANT contracts_expressions

   74 variant_contracts: VARIANT contracts_expressions

   75 contracts_expressions: IDENTIFIER COLON statement
   76                      | statement

   77 expr: bool_exp
   78     | arithmetic_exp
   79     | comp_exp

   80 bool_exp: bool_exp OR bool_term
   81         | bool_term

   82 bool_term: bool_term AND bool_factor
   83          | bool_factor

   84 bool_factor: bool_factor XOR bool_node
   85            | bool_node

   86 bool_node: IDENTIFIER
   87          | NOT bool_node
   88          | BOOLEAN
   89          | OP bool_exp CP

   90 comp_exp: arithmetic_exp comp_operator arithmetic_exp
   91         | string_literal comp_operator string_literal
   92         | boolean_literal EQUAL boolean_literal

   93 arithmetic_exp: arithmetic_term
   94               | arithmetic_exp ADD arithmetic_term
   95               | arithmetic_exp SUB arithmetic_term

   96 arithmetic_term: arithmetic_factor
   97                | arithmetic_term MUL arithmetic_factor
   98                | arithmetic_term DIV arithmetic_factor

   99 arithmetic_factor: IDENTIFIER
  100                  | integer_literal
  101                  | real_literal
  102                  | double_literal
  103                  | OP arithmetic_exp CP


Terminals, with rules where they appear

$end (0) 0
error (256)
shift (258)
INTEGER (259) 67
REAL (260) 68
STRING (261) 69
ARRAYED_LIST (262)
BOOLEAN (263) 72 88
CHARACTER (264) 71
DOUBLE (265) 70
OP (266) 13 27 89 103
CP (267) 13 27 89 103
OSB (268)
CSB (269)
COLON (270) 19 75
SEMICOLON (271) 17
EQUAL (272) 60 92
ASSIGN (273) 35 36
REQUIRE (274)
ENSURE (275)
INVARIANT (276) 73
VARIANT (277) 74
CLASS (278) 2
CREATE (279) 5
FEATURE (280) 8
KEYWORD (281)
IDENTIFIER (282) 2 5 10 11 17 18 31 35 36 75 86 99
DO (283) 15
END (284) 2 15 32 44 51
DATATYPE (285) 19
IF (286) 39
THEN (287) 39 41 47
ELSEIF (288) 41
ELSE (289) 43 44
INSPECT (290) 44
WHEN (291) 47
COMMA (292) 49
GTEQ (293) 57
LT (294) 58
LTEQ (295) 59
GT (296) 56
PIPEDOTS (297)
DOTS (298) 50
FROM (299) 51
UNTIL (300) 51
LOOP (301) 51
ADD (302) 29 94
SUB (303) 95
MUL (304) 97
DIV (305) 98
AND (306) 82
OR (307) 80
XOR (308) 84
NOT (309) 87
PRINT (310) 27


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
program (57)
    on left: 1, on right: 0
class_declaration (58)
    on left: 2, on right: 1
inside_class (59)
    on left: 3 4, on right: 2
create_declaration (60)
    on left: 5, on right: 4
features_declaration (61)
    on left: 6 7, on right: 4 7
feature_declaration (62)
    on left: 8, on right: 7
inside_feature (63)
    on left: 9 10 11, on right: 8 10 11
function_head (64)
    on left: 12 13, on right: 10 11
inside_function (65)
    on left: 14 15, on right: 10 11
container (66)
    on left: 16 17 18, on right: 13 17 18
if_return (67)
    on left: 19, on right: 11 17 18
code_section (68)
    on left: 20 21, on right: 15 21 39 41 43 44 47 51
code_section_in (69)
    on left: 22 23 24 25 26, on right: 20 21
print_function (70)
    on left: 27, on right: 26
inside_print (71)
    on left: 28 29, on right: 27 29
possible_inside_print (72)
    on left: 30 31, on right: 28 29
condition (73)
    on left: 32, on right: 22
variable_assignments (74)
    on left: 33 34, on right: 34 51
variable_assignment (75)
    on left: 35 36, on right: 25 34 51
statement (76)
    on left: 37 38, on right: 39 41 51 75 76
if-condition (77)
    on left: 39, on right: 32
elseif-condition (78)
    on left: 40 41, on right: 32 41
else-condition (79)
    on left: 42 43, on right: 32
inspect_structure (80)
    on left: 44, on right: 23
when_part_list (81)
    on left: 45 46, on right: 44 46
when_part (82)
    on left: 47, on right: 46
choices (83)
    on left: 48 49 50, on right: 47 49
loops (84)
    on left: 51, on right: 24
top_loop (85)
    on left: 52 53, on right: 51
bottom_loop (86)
    on left: 54 55, on right: 51
comp_operator (87)
    on left: 56 57 58 59 60, on right: 90 91
literals (88)
    on left: 61 62 63 64 65 66, on right: 48 49 50
integer_literal (89)
    on left: 67, on right: 61 100
real_literal (90)
    on left: 68, on right: 62 101
string_literal (91)
    on left: 69, on right: 30 36 63 91
double_literal (92)
    on left: 70, on right: 64 102
character_literal (93)
    on left: 71, on right: 65
boolean_literal (94)
    on left: 72, on right: 66 92
invariant_contracts (95)
    on left: 73, on right: 53
variant_contracts (96)
    on left: 74, on right: 55
contracts_expressions (97)
    on left: 75 76, on right: 73 74
expr (98)
    on left: 77 78 79, on right: 35 44
bool_exp (99)
    on left: 80 81, on right: 37 77 80 89
bool_term (100)
    on left: 82 83, on right: 80 81 82
bool_factor (101)
    on left: 84 85, on right: 82 83 84
bool_node (102)
    on left: 86 87 88 89, on right: 84 85 87
comp_exp (103)
    on left: 90 91 92, on right: 38 79
arithmetic_exp (104)
    on left: 93 94 95, on right: 78 90 94 95 103
arithmetic_term (105)
    on left: 96 97 98, on right: 93 94 95 97 98
arithmetic_factor (106)
    on left: 99 100 101 102 103, on right: 96 97 98


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program            go to state 2
    class_declaration  go to state 3


State 1

    2 class_declaration: CLASS . IDENTIFIER inside_class END

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: class_declaration .

    $default  reduce using rule 1 (program)


State 4

    2 class_declaration: CLASS IDENTIFIER . inside_class END

    CREATE  shift, and go to state 6

    $default  reduce using rule 3 (inside_class)

    inside_class        go to state 7
    create_declaration  go to state 8


State 5

    0 $accept: program $end .

    $default  accept


State 6

    5 create_declaration: CREATE . IDENTIFIER

    IDENTIFIER  shift, and go to state 9


State 7

    2 class_declaration: CLASS IDENTIFIER inside_class . END

    END  shift, and go to state 10


State 8

    4 inside_class: create_declaration . features_declaration

    $default  reduce using rule 6 (features_declaration)

    features_declaration  go to state 11


State 9

    5 create_declaration: CREATE IDENTIFIER .

    $default  reduce using rule 5 (create_declaration)


State 10

    2 class_declaration: CLASS IDENTIFIER inside_class END .

    $default  reduce using rule 2 (class_declaration)


State 11

    4 inside_class: create_declaration features_declaration .
    7 features_declaration: features_declaration . feature_declaration

    FEATURE  shift, and go to state 12

    $default  reduce using rule 4 (inside_class)

    feature_declaration  go to state 13


State 12

    8 feature_declaration: FEATURE . inside_feature

    IDENTIFIER  shift, and go to state 14

    $default  reduce using rule 9 (inside_feature)

    inside_feature  go to state 15


State 13

    7 features_declaration: features_declaration feature_declaration .

    $default  reduce using rule 7 (features_declaration)


State 14

   10 inside_feature: IDENTIFIER . function_head inside_function inside_feature
   11               | IDENTIFIER . function_head if_return inside_function inside_feature

    OP  shift, and go to state 16

    $default  reduce using rule 12 (function_head)

    function_head  go to state 17


State 15

    8 feature_declaration: FEATURE inside_feature .

    $default  reduce using rule 8 (feature_declaration)


State 16

   13 function_head: OP . container CP

    IDENTIFIER  shift, and go to state 18

    $default  reduce using rule 16 (container)

    container  go to state 19


State 17

   10 inside_feature: IDENTIFIER function_head . inside_function inside_feature
   11               | IDENTIFIER function_head . if_return inside_function inside_feature

    COLON  shift, and go to state 20
    DO     shift, and go to state 21

    $default  reduce using rule 14 (inside_function)

    inside_function  go to state 22
    if_return        go to state 23


State 18

   17 container: IDENTIFIER . if_return SEMICOLON container
   18          | IDENTIFIER . if_return container

    COLON  shift, and go to state 20

    if_return  go to state 24


State 19

   13 function_head: OP container . CP

    CP  shift, and go to state 25


State 20

   19 if_return: COLON . DATATYPE

    DATATYPE  shift, and go to state 26


State 21

   15 inside_function: DO . code_section END

    IDENTIFIER  shift, and go to state 27
    IF          shift, and go to state 28
    INSPECT     shift, and go to state 29
    FROM        shift, and go to state 30
    PRINT       shift, and go to state 31

    code_section         go to state 32
    code_section_in      go to state 33
    print_function       go to state 34
    condition            go to state 35
    variable_assignment  go to state 36
    if-condition         go to state 37
    inspect_structure    go to state 38
    loops                go to state 39


State 22

   10 inside_feature: IDENTIFIER function_head inside_function . inside_feature

    IDENTIFIER  shift, and go to state 14

    $default  reduce using rule 9 (inside_feature)

    inside_feature  go to state 40


State 23

   11 inside_feature: IDENTIFIER function_head if_return . inside_function inside_feature

    DO  shift, and go to state 21

    $default  reduce using rule 14 (inside_function)

    inside_function  go to state 41


State 24

   17 container: IDENTIFIER if_return . SEMICOLON container
   18          | IDENTIFIER if_return . container

    SEMICOLON   shift, and go to state 42
    IDENTIFIER  shift, and go to state 18

    $default  reduce using rule 16 (container)

    container  go to state 43


State 25

   13 function_head: OP container CP .

    $default  reduce using rule 13 (function_head)


State 26

   19 if_return: COLON DATATYPE .

    $default  reduce using rule 19 (if_return)


State 27

   35 variable_assignment: IDENTIFIER . ASSIGN expr
   36                    | IDENTIFIER . ASSIGN string_literal

    ASSIGN  shift, and go to state 44


State 28

   39 if-condition: IF . statement THEN code_section

    INTEGER     shift, and go to state 45
    REAL        shift, and go to state 46
    STRING      shift, and go to state 47
    BOOLEAN     shift, and go to state 48
    DOUBLE      shift, and go to state 49
    OP          shift, and go to state 50
    IDENTIFIER  shift, and go to state 51
    NOT         shift, and go to state 52

    statement          go to state 53
    integer_literal    go to state 54
    real_literal       go to state 55
    string_literal     go to state 56
    double_literal     go to state 57
    boolean_literal    go to state 58
    bool_exp           go to state 59
    bool_term          go to state 60
    bool_factor        go to state 61
    bool_node          go to state 62
    comp_exp           go to state 63
    arithmetic_exp     go to state 64
    arithmetic_term    go to state 65
    arithmetic_factor  go to state 66


State 29

   44 inspect_structure: INSPECT . expr when_part_list ELSE code_section END

    INTEGER     shift, and go to state 45
    REAL        shift, and go to state 46
    STRING      shift, and go to state 47
    BOOLEAN     shift, and go to state 48
    DOUBLE      shift, and go to state 49
    OP          shift, and go to state 50
    IDENTIFIER  shift, and go to state 51
    NOT         shift, and go to state 52

    integer_literal    go to state 54
    real_literal       go to state 55
    string_literal     go to state 56
    double_literal     go to state 57
    boolean_literal    go to state 58
    expr               go to state 67
    bool_exp           go to state 68
    bool_term          go to state 60
    bool_factor        go to state 61
    bool_node          go to state 62
    comp_exp           go to state 69
    arithmetic_exp     go to state 70
    arithmetic_term    go to state 65
    arithmetic_factor  go to state 66


State 30

   51 loops: FROM . variable_assignment variable_assignments top_loop UNTIL statement LOOP code_section bottom_loop END

    IDENTIFIER  shift, and go to state 27

    variable_assignment  go to state 71


State 31

   27 print_function: PRINT . OP inside_print CP

    OP  shift, and go to state 72


State 32

   15 inside_function: DO code_section . END

    END  shift, and go to state 73


State 33

   20 code_section: code_section_in .
   21             | code_section_in . code_section

    IDENTIFIER  shift, and go to state 27
    IF          shift, and go to state 28
    INSPECT     shift, and go to state 29
    FROM        shift, and go to state 30
    PRINT       shift, and go to state 31

    $default  reduce using rule 20 (code_section)

    code_section         go to state 74
    code_section_in      go to state 33
    print_function       go to state 34
    condition            go to state 35
    variable_assignment  go to state 36
    if-condition         go to state 37
    inspect_structure    go to state 38
    loops                go to state 39


State 34

   26 code_section_in: print_function .

    $default  reduce using rule 26 (code_section_in)


State 35

   22 code_section_in: condition .

    $default  reduce using rule 22 (code_section_in)


State 36

   25 code_section_in: variable_assignment .

    $default  reduce using rule 25 (code_section_in)


State 37

   32 condition: if-condition . elseif-condition else-condition END

    $default  reduce using rule 40 (elseif-condition)

    elseif-condition  go to state 75


State 38

   23 code_section_in: inspect_structure .

    $default  reduce using rule 23 (code_section_in)


State 39

   24 code_section_in: loops .

    $default  reduce using rule 24 (code_section_in)


State 40

   10 inside_feature: IDENTIFIER function_head inside_function inside_feature .

    $default  reduce using rule 10 (inside_feature)


State 41

   11 inside_feature: IDENTIFIER function_head if_return inside_function . inside_feature

    IDENTIFIER  shift, and go to state 14

    $default  reduce using rule 9 (inside_feature)

    inside_feature  go to state 76


State 42

   17 container: IDENTIFIER if_return SEMICOLON . container

    IDENTIFIER  shift, and go to state 18

    $default  reduce using rule 16 (container)

    container  go to state 77


State 43

   18 container: IDENTIFIER if_return container .

    $default  reduce using rule 18 (container)


State 44

   35 variable_assignment: IDENTIFIER ASSIGN . expr
   36                    | IDENTIFIER ASSIGN . string_literal

    INTEGER     shift, and go to state 45
    REAL        shift, and go to state 46
    STRING      shift, and go to state 47
    BOOLEAN     shift, and go to state 48
    DOUBLE      shift, and go to state 49
    OP          shift, and go to state 50
    IDENTIFIER  shift, and go to state 51
    NOT         shift, and go to state 52

    integer_literal    go to state 54
    real_literal       go to state 55
    string_literal     go to state 78
    double_literal     go to state 57
    boolean_literal    go to state 58
    expr               go to state 79
    bool_exp           go to state 68
    bool_term          go to state 60
    bool_factor        go to state 61
    bool_node          go to state 62
    comp_exp           go to state 69
    arithmetic_exp     go to state 70
    arithmetic_term    go to state 65
    arithmetic_factor  go to state 66


State 45

   67 integer_literal: INTEGER .

    $default  reduce using rule 67 (integer_literal)


State 46

   68 real_literal: REAL .

    $default  reduce using rule 68 (real_literal)


State 47

   69 string_literal: STRING .

    $default  reduce using rule 69 (string_literal)


State 48

   72 boolean_literal: BOOLEAN .
   88 bool_node: BOOLEAN .

    EQUAL     reduce using rule 72 (boolean_literal)
    $default  reduce using rule 88 (bool_node)


State 49

   70 double_literal: DOUBLE .

    $default  reduce using rule 70 (double_literal)


State 50

   89 bool_node: OP . bool_exp CP
  103 arithmetic_factor: OP . arithmetic_exp CP

    INTEGER     shift, and go to state 45
    REAL        shift, and go to state 46
    BOOLEAN     shift, and go to state 80
    DOUBLE      shift, and go to state 49
    OP          shift, and go to state 50
    IDENTIFIER  shift, and go to state 51
    NOT         shift, and go to state 52

    integer_literal    go to state 54
    real_literal       go to state 55
    double_literal     go to state 57
    bool_exp           go to state 81
    bool_term          go to state 60
    bool_factor        go to state 61
    bool_node          go to state 62
    arithmetic_exp     go to state 82
    arithmetic_term    go to state 65
    arithmetic_factor  go to state 66


State 51

   86 bool_node: IDENTIFIER .
   99 arithmetic_factor: IDENTIFIER .

    CP          reduce using rule 86 (bool_node)
    CP          [reduce using rule 99 (arithmetic_factor)]
    EQUAL       reduce using rule 99 (arithmetic_factor)
    INVARIANT   reduce using rule 86 (bool_node)
    INVARIANT   [reduce using rule 99 (arithmetic_factor)]
    VARIANT     reduce using rule 86 (bool_node)
    VARIANT     [reduce using rule 99 (arithmetic_factor)]
    IDENTIFIER  reduce using rule 86 (bool_node)
    IDENTIFIER  [reduce using rule 99 (arithmetic_factor)]
    END         reduce using rule 86 (bool_node)
    END         [reduce using rule 99 (arithmetic_factor)]
    IF          reduce using rule 86 (bool_node)
    IF          [reduce using rule 99 (arithmetic_factor)]
    ELSEIF      reduce using rule 86 (bool_node)
    ELSEIF      [reduce using rule 99 (arithmetic_factor)]
    ELSE        reduce using rule 86 (bool_node)
    ELSE        [reduce using rule 99 (arithmetic_factor)]
    INSPECT     reduce using rule 86 (bool_node)
    INSPECT     [reduce using rule 99 (arithmetic_factor)]
    WHEN        reduce using rule 86 (bool_node)
    WHEN        [reduce using rule 99 (arithmetic_factor)]
    GTEQ        reduce using rule 99 (arithmetic_factor)
    LT          reduce using rule 99 (arithmetic_factor)
    LTEQ        reduce using rule 99 (arithmetic_factor)
    GT          reduce using rule 99 (arithmetic_factor)
    FROM        reduce using rule 86 (bool_node)
    FROM        [reduce using rule 99 (arithmetic_factor)]
    UNTIL       reduce using rule 86 (bool_node)
    UNTIL       [reduce using rule 99 (arithmetic_factor)]
    ADD         reduce using rule 99 (arithmetic_factor)
    SUB         reduce using rule 99 (arithmetic_factor)
    MUL         reduce using rule 99 (arithmetic_factor)
    DIV         reduce using rule 99 (arithmetic_factor)
    PRINT       reduce using rule 86 (bool_node)
    PRINT       [reduce using rule 99 (arithmetic_factor)]
    $default    reduce using rule 86 (bool_node)


State 52

   87 bool_node: NOT . bool_node

    BOOLEAN     shift, and go to state 80
    OP          shift, and go to state 83
    IDENTIFIER  shift, and go to state 84
    NOT         shift, and go to state 52

    bool_node  go to state 85


State 53

   39 if-condition: IF statement . THEN code_section

    THEN  shift, and go to state 86


State 54

  100 arithmetic_factor: integer_literal .

    $default  reduce using rule 100 (arithmetic_factor)


State 55

  101 arithmetic_factor: real_literal .

    $default  reduce using rule 101 (arithmetic_factor)


State 56

   91 comp_exp: string_literal . comp_operator string_literal

    EQUAL  shift, and go to state 87
    GTEQ   shift, and go to state 88
    LT     shift, and go to state 89
    LTEQ   shift, and go to state 90
    GT     shift, and go to state 91

    comp_operator  go to state 92


State 57

  102 arithmetic_factor: double_literal .

    $default  reduce using rule 102 (arithmetic_factor)


State 58

   92 comp_exp: boolean_literal . EQUAL boolean_literal

    EQUAL  shift, and go to state 93


State 59

   37 statement: bool_exp .
   80 bool_exp: bool_exp . OR bool_term

    OR  shift, and go to state 94

    $default  reduce using rule 37 (statement)


State 60

   81 bool_exp: bool_term .
   82 bool_term: bool_term . AND bool_factor

    AND  shift, and go to state 95

    $default  reduce using rule 81 (bool_exp)


State 61

   83 bool_term: bool_factor .
   84 bool_factor: bool_factor . XOR bool_node

    XOR  shift, and go to state 96

    $default  reduce using rule 83 (bool_term)


State 62

   85 bool_factor: bool_node .

    $default  reduce using rule 85 (bool_factor)


State 63

   38 statement: comp_exp .

    $default  reduce using rule 38 (statement)


State 64

   90 comp_exp: arithmetic_exp . comp_operator arithmetic_exp
   94 arithmetic_exp: arithmetic_exp . ADD arithmetic_term
   95               | arithmetic_exp . SUB arithmetic_term

    EQUAL  shift, and go to state 87
    GTEQ   shift, and go to state 88
    LT     shift, and go to state 89
    LTEQ   shift, and go to state 90
    GT     shift, and go to state 91
    ADD    shift, and go to state 97
    SUB    shift, and go to state 98

    comp_operator  go to state 99


State 65

   93 arithmetic_exp: arithmetic_term .
   97 arithmetic_term: arithmetic_term . MUL arithmetic_factor
   98                | arithmetic_term . DIV arithmetic_factor

    MUL  shift, and go to state 100
    DIV  shift, and go to state 101

    $default  reduce using rule 93 (arithmetic_exp)


State 66

   96 arithmetic_term: arithmetic_factor .

    $default  reduce using rule 96 (arithmetic_term)


State 67

   44 inspect_structure: INSPECT expr . when_part_list ELSE code_section END

    $default  reduce using rule 45 (when_part_list)

    when_part_list  go to state 102


State 68

   77 expr: bool_exp .
   80 bool_exp: bool_exp . OR bool_term

    OR  shift, and go to state 94

    $default  reduce using rule 77 (expr)


State 69

   79 expr: comp_exp .

    $default  reduce using rule 79 (expr)


State 70

   78 expr: arithmetic_exp .
   90 comp_exp: arithmetic_exp . comp_operator arithmetic_exp
   94 arithmetic_exp: arithmetic_exp . ADD arithmetic_term
   95               | arithmetic_exp . SUB arithmetic_term

    EQUAL  shift, and go to state 87
    GTEQ   shift, and go to state 88
    LT     shift, and go to state 89
    LTEQ   shift, and go to state 90
    GT     shift, and go to state 91
    ADD    shift, and go to state 97
    SUB    shift, and go to state 98

    $default  reduce using rule 78 (expr)

    comp_operator  go to state 99


State 71

   51 loops: FROM variable_assignment . variable_assignments top_loop UNTIL statement LOOP code_section bottom_loop END

    $default  reduce using rule 33 (variable_assignments)

    variable_assignments  go to state 103


State 72

   27 print_function: PRINT OP . inside_print CP

    STRING      shift, and go to state 47
    IDENTIFIER  shift, and go to state 104

    inside_print           go to state 105
    possible_inside_print  go to state 106
    string_literal         go to state 107


State 73

   15 inside_function: DO code_section END .

    $default  reduce using rule 15 (inside_function)


State 74

   21 code_section: code_section_in code_section .

    $default  reduce using rule 21 (code_section)


State 75

   32 condition: if-condition elseif-condition . else-condition END
   41 elseif-condition: elseif-condition . ELSEIF statement THEN code_section

    ELSEIF  shift, and go to state 108
    ELSE    shift, and go to state 109

    $default  reduce using rule 42 (else-condition)

    else-condition  go to state 110


State 76

   11 inside_feature: IDENTIFIER function_head if_return inside_function inside_feature .

    $default  reduce using rule 11 (inside_feature)


State 77

   17 container: IDENTIFIER if_return SEMICOLON container .

    $default  reduce using rule 17 (container)


State 78

   36 variable_assignment: IDENTIFIER ASSIGN string_literal .
   91 comp_exp: string_literal . comp_operator string_literal

    EQUAL  shift, and go to state 87
    GTEQ   shift, and go to state 88
    LT     shift, and go to state 89
    LTEQ   shift, and go to state 90
    GT     shift, and go to state 91

    $default  reduce using rule 36 (variable_assignment)

    comp_operator  go to state 92


State 79

   35 variable_assignment: IDENTIFIER ASSIGN expr .

    $default  reduce using rule 35 (variable_assignment)


State 80

   88 bool_node: BOOLEAN .

    $default  reduce using rule 88 (bool_node)


State 81

   80 bool_exp: bool_exp . OR bool_term
   89 bool_node: OP bool_exp . CP

    CP  shift, and go to state 111
    OR  shift, and go to state 94


State 82

   94 arithmetic_exp: arithmetic_exp . ADD arithmetic_term
   95               | arithmetic_exp . SUB arithmetic_term
  103 arithmetic_factor: OP arithmetic_exp . CP

    CP   shift, and go to state 112
    ADD  shift, and go to state 97
    SUB  shift, and go to state 98


State 83

   89 bool_node: OP . bool_exp CP

    BOOLEAN     shift, and go to state 80
    OP          shift, and go to state 83
    IDENTIFIER  shift, and go to state 84
    NOT         shift, and go to state 52

    bool_exp     go to state 81
    bool_term    go to state 60
    bool_factor  go to state 61
    bool_node    go to state 62


State 84

   86 bool_node: IDENTIFIER .

    $default  reduce using rule 86 (bool_node)


State 85

   87 bool_node: NOT bool_node .

    $default  reduce using rule 87 (bool_node)


State 86

   39 if-condition: IF statement THEN . code_section

    IDENTIFIER  shift, and go to state 27
    IF          shift, and go to state 28
    INSPECT     shift, and go to state 29
    FROM        shift, and go to state 30
    PRINT       shift, and go to state 31

    code_section         go to state 113
    code_section_in      go to state 33
    print_function       go to state 34
    condition            go to state 35
    variable_assignment  go to state 36
    if-condition         go to state 37
    inspect_structure    go to state 38
    loops                go to state 39


State 87

   60 comp_operator: EQUAL .

    $default  reduce using rule 60 (comp_operator)


State 88

   57 comp_operator: GTEQ .

    $default  reduce using rule 57 (comp_operator)


State 89

   58 comp_operator: LT .

    $default  reduce using rule 58 (comp_operator)


State 90

   59 comp_operator: LTEQ .

    $default  reduce using rule 59 (comp_operator)


State 91

   56 comp_operator: GT .

    $default  reduce using rule 56 (comp_operator)


State 92

   91 comp_exp: string_literal comp_operator . string_literal

    STRING  shift, and go to state 47

    string_literal  go to state 114


State 93

   92 comp_exp: boolean_literal EQUAL . boolean_literal

    BOOLEAN  shift, and go to state 115

    boolean_literal  go to state 116


State 94

   80 bool_exp: bool_exp OR . bool_term

    BOOLEAN     shift, and go to state 80
    OP          shift, and go to state 83
    IDENTIFIER  shift, and go to state 84
    NOT         shift, and go to state 52

    bool_term    go to state 117
    bool_factor  go to state 61
    bool_node    go to state 62


State 95

   82 bool_term: bool_term AND . bool_factor

    BOOLEAN     shift, and go to state 80
    OP          shift, and go to state 83
    IDENTIFIER  shift, and go to state 84
    NOT         shift, and go to state 52

    bool_factor  go to state 118
    bool_node    go to state 62


State 96

   84 bool_factor: bool_factor XOR . bool_node

    BOOLEAN     shift, and go to state 80
    OP          shift, and go to state 83
    IDENTIFIER  shift, and go to state 84
    NOT         shift, and go to state 52

    bool_node  go to state 119


State 97

   94 arithmetic_exp: arithmetic_exp ADD . arithmetic_term

    INTEGER     shift, and go to state 45
    REAL        shift, and go to state 46
    DOUBLE      shift, and go to state 49
    OP          shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    integer_literal    go to state 54
    real_literal       go to state 55
    double_literal     go to state 57
    arithmetic_term    go to state 122
    arithmetic_factor  go to state 66


State 98

   95 arithmetic_exp: arithmetic_exp SUB . arithmetic_term

    INTEGER     shift, and go to state 45
    REAL        shift, and go to state 46
    DOUBLE      shift, and go to state 49
    OP          shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    integer_literal    go to state 54
    real_literal       go to state 55
    double_literal     go to state 57
    arithmetic_term    go to state 123
    arithmetic_factor  go to state 66


State 99

   90 comp_exp: arithmetic_exp comp_operator . arithmetic_exp

    INTEGER     shift, and go to state 45
    REAL        shift, and go to state 46
    DOUBLE      shift, and go to state 49
    OP          shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    integer_literal    go to state 54
    real_literal       go to state 55
    double_literal     go to state 57
    arithmetic_exp     go to state 124
    arithmetic_term    go to state 65
    arithmetic_factor  go to state 66


State 100

   97 arithmetic_term: arithmetic_term MUL . arithmetic_factor

    INTEGER     shift, and go to state 45
    REAL        shift, and go to state 46
    DOUBLE      shift, and go to state 49
    OP          shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    integer_literal    go to state 54
    real_literal       go to state 55
    double_literal     go to state 57
    arithmetic_factor  go to state 125


State 101

   98 arithmetic_term: arithmetic_term DIV . arithmetic_factor

    INTEGER     shift, and go to state 45
    REAL        shift, and go to state 46
    DOUBLE      shift, and go to state 49
    OP          shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    integer_literal    go to state 54
    real_literal       go to state 55
    double_literal     go to state 57
    arithmetic_factor  go to state 126


State 102

   44 inspect_structure: INSPECT expr when_part_list . ELSE code_section END
   46 when_part_list: when_part_list . when_part

    ELSE  shift, and go to state 127
    WHEN  shift, and go to state 128

    when_part  go to state 129


State 103

   34 variable_assignments: variable_assignments . variable_assignment
   51 loops: FROM variable_assignment variable_assignments . top_loop UNTIL statement LOOP code_section bottom_loop END

    INVARIANT   shift, and go to state 130
    IDENTIFIER  shift, and go to state 27

    $default  reduce using rule 52 (top_loop)

    variable_assignment  go to state 131
    top_loop             go to state 132
    invariant_contracts  go to state 133


State 104

   31 possible_inside_print: IDENTIFIER .

    $default  reduce using rule 31 (possible_inside_print)


State 105

   27 print_function: PRINT OP inside_print . CP

    CP  shift, and go to state 134


State 106

   28 inside_print: possible_inside_print .
   29             | possible_inside_print . ADD inside_print

    ADD  shift, and go to state 135

    $default  reduce using rule 28 (inside_print)


State 107

   30 possible_inside_print: string_literal .

    $default  reduce using rule 30 (possible_inside_print)


State 108

   41 elseif-condition: elseif-condition ELSEIF . statement THEN code_section

    INTEGER     shift, and go to state 45
    REAL        shift, and go to state 46
    STRING      shift, and go to state 47
    BOOLEAN     shift, and go to state 48
    DOUBLE      shift, and go to state 49
    OP          shift, and go to state 50
    IDENTIFIER  shift, and go to state 51
    NOT         shift, and go to state 52

    statement          go to state 136
    integer_literal    go to state 54
    real_literal       go to state 55
    string_literal     go to state 56
    double_literal     go to state 57
    boolean_literal    go to state 58
    bool_exp           go to state 59
    bool_term          go to state 60
    bool_factor        go to state 61
    bool_node          go to state 62
    comp_exp           go to state 63
    arithmetic_exp     go to state 64
    arithmetic_term    go to state 65
    arithmetic_factor  go to state 66


State 109

   43 else-condition: ELSE . code_section

    IDENTIFIER  shift, and go to state 27
    IF          shift, and go to state 28
    INSPECT     shift, and go to state 29
    FROM        shift, and go to state 30
    PRINT       shift, and go to state 31

    code_section         go to state 137
    code_section_in      go to state 33
    print_function       go to state 34
    condition            go to state 35
    variable_assignment  go to state 36
    if-condition         go to state 37
    inspect_structure    go to state 38
    loops                go to state 39


State 110

   32 condition: if-condition elseif-condition else-condition . END

    END  shift, and go to state 138


State 111

   89 bool_node: OP bool_exp CP .

    $default  reduce using rule 89 (bool_node)


State 112

  103 arithmetic_factor: OP arithmetic_exp CP .

    $default  reduce using rule 103 (arithmetic_factor)


State 113

   39 if-condition: IF statement THEN code_section .

    $default  reduce using rule 39 (if-condition)


State 114

   91 comp_exp: string_literal comp_operator string_literal .

    $default  reduce using rule 91 (comp_exp)


State 115

   72 boolean_literal: BOOLEAN .

    $default  reduce using rule 72 (boolean_literal)


State 116

   92 comp_exp: boolean_literal EQUAL boolean_literal .

    $default  reduce using rule 92 (comp_exp)


State 117

   80 bool_exp: bool_exp OR bool_term .
   82 bool_term: bool_term . AND bool_factor

    AND  shift, and go to state 95

    $default  reduce using rule 80 (bool_exp)


State 118

   82 bool_term: bool_term AND bool_factor .
   84 bool_factor: bool_factor . XOR bool_node

    XOR  shift, and go to state 96

    $default  reduce using rule 82 (bool_term)


State 119

   84 bool_factor: bool_factor XOR bool_node .

    $default  reduce using rule 84 (bool_factor)


State 120

  103 arithmetic_factor: OP . arithmetic_exp CP

    INTEGER     shift, and go to state 45
    REAL        shift, and go to state 46
    DOUBLE      shift, and go to state 49
    OP          shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    integer_literal    go to state 54
    real_literal       go to state 55
    double_literal     go to state 57
    arithmetic_exp     go to state 82
    arithmetic_term    go to state 65
    arithmetic_factor  go to state 66


State 121

   99 arithmetic_factor: IDENTIFIER .

    $default  reduce using rule 99 (arithmetic_factor)


State 122

   94 arithmetic_exp: arithmetic_exp ADD arithmetic_term .
   97 arithmetic_term: arithmetic_term . MUL arithmetic_factor
   98                | arithmetic_term . DIV arithmetic_factor

    MUL  shift, and go to state 100
    DIV  shift, and go to state 101

    $default  reduce using rule 94 (arithmetic_exp)


State 123

   95 arithmetic_exp: arithmetic_exp SUB arithmetic_term .
   97 arithmetic_term: arithmetic_term . MUL arithmetic_factor
   98                | arithmetic_term . DIV arithmetic_factor

    MUL  shift, and go to state 100
    DIV  shift, and go to state 101

    $default  reduce using rule 95 (arithmetic_exp)


State 124

   90 comp_exp: arithmetic_exp comp_operator arithmetic_exp .
   94 arithmetic_exp: arithmetic_exp . ADD arithmetic_term
   95               | arithmetic_exp . SUB arithmetic_term

    ADD  shift, and go to state 97
    SUB  shift, and go to state 98

    $default  reduce using rule 90 (comp_exp)


State 125

   97 arithmetic_term: arithmetic_term MUL arithmetic_factor .

    $default  reduce using rule 97 (arithmetic_term)


State 126

   98 arithmetic_term: arithmetic_term DIV arithmetic_factor .

    $default  reduce using rule 98 (arithmetic_term)


State 127

   44 inspect_structure: INSPECT expr when_part_list ELSE . code_section END

    IDENTIFIER  shift, and go to state 27
    IF          shift, and go to state 28
    INSPECT     shift, and go to state 29
    FROM        shift, and go to state 30
    PRINT       shift, and go to state 31

    code_section         go to state 139
    code_section_in      go to state 33
    print_function       go to state 34
    condition            go to state 35
    variable_assignment  go to state 36
    if-condition         go to state 37
    inspect_structure    go to state 38
    loops                go to state 39


State 128

   47 when_part: WHEN . choices THEN code_section

    INTEGER    shift, and go to state 45
    REAL       shift, and go to state 46
    STRING     shift, and go to state 47
    BOOLEAN    shift, and go to state 115
    CHARACTER  shift, and go to state 140
    DOUBLE     shift, and go to state 49

    choices            go to state 141
    literals           go to state 142
    integer_literal    go to state 143
    real_literal       go to state 144
    string_literal     go to state 145
    double_literal     go to state 146
    character_literal  go to state 147
    boolean_literal    go to state 148


State 129

   46 when_part_list: when_part_list when_part .

    $default  reduce using rule 46 (when_part_list)


State 130

   73 invariant_contracts: INVARIANT . contracts_expressions

    INTEGER     shift, and go to state 45
    REAL        shift, and go to state 46
    STRING      shift, and go to state 47
    BOOLEAN     shift, and go to state 48
    DOUBLE      shift, and go to state 49
    OP          shift, and go to state 50
    IDENTIFIER  shift, and go to state 149
    NOT         shift, and go to state 52

    statement              go to state 150
    integer_literal        go to state 54
    real_literal           go to state 55
    string_literal         go to state 56
    double_literal         go to state 57
    boolean_literal        go to state 58
    contracts_expressions  go to state 151
    bool_exp               go to state 59
    bool_term              go to state 60
    bool_factor            go to state 61
    bool_node              go to state 62
    comp_exp               go to state 63
    arithmetic_exp         go to state 64
    arithmetic_term        go to state 65
    arithmetic_factor      go to state 66


State 131

   34 variable_assignments: variable_assignments variable_assignment .

    $default  reduce using rule 34 (variable_assignments)


State 132

   51 loops: FROM variable_assignment variable_assignments top_loop . UNTIL statement LOOP code_section bottom_loop END

    UNTIL  shift, and go to state 152


State 133

   53 top_loop: invariant_contracts .

    $default  reduce using rule 53 (top_loop)


State 134

   27 print_function: PRINT OP inside_print CP .

    $default  reduce using rule 27 (print_function)


State 135

   29 inside_print: possible_inside_print ADD . inside_print

    STRING      shift, and go to state 47
    IDENTIFIER  shift, and go to state 104

    inside_print           go to state 153
    possible_inside_print  go to state 106
    string_literal         go to state 107


State 136

   41 elseif-condition: elseif-condition ELSEIF statement . THEN code_section

    THEN  shift, and go to state 154


State 137

   43 else-condition: ELSE code_section .

    $default  reduce using rule 43 (else-condition)


State 138

   32 condition: if-condition elseif-condition else-condition END .

    $default  reduce using rule 32 (condition)


State 139

   44 inspect_structure: INSPECT expr when_part_list ELSE code_section . END

    END  shift, and go to state 155


State 140

   71 character_literal: CHARACTER .

    $default  reduce using rule 71 (character_literal)


State 141

   47 when_part: WHEN choices . THEN code_section

    THEN  shift, and go to state 156


State 142

   48 choices: literals .
   49        | literals . COMMA choices
   50        | literals . DOTS literals

    COMMA  shift, and go to state 157
    DOTS   shift, and go to state 158

    $default  reduce using rule 48 (choices)


State 143

   61 literals: integer_literal .

    $default  reduce using rule 61 (literals)


State 144

   62 literals: real_literal .

    $default  reduce using rule 62 (literals)


State 145

   63 literals: string_literal .

    $default  reduce using rule 63 (literals)


State 146

   64 literals: double_literal .

    $default  reduce using rule 64 (literals)


State 147

   65 literals: character_literal .

    $default  reduce using rule 65 (literals)


State 148

   66 literals: boolean_literal .

    $default  reduce using rule 66 (literals)


State 149

   75 contracts_expressions: IDENTIFIER . COLON statement
   86 bool_node: IDENTIFIER .
   99 arithmetic_factor: IDENTIFIER .

    COLON  shift, and go to state 159

    END       reduce using rule 86 (bool_node)
    UNTIL     reduce using rule 86 (bool_node)
    AND       reduce using rule 86 (bool_node)
    OR        reduce using rule 86 (bool_node)
    XOR       reduce using rule 86 (bool_node)
    $default  reduce using rule 99 (arithmetic_factor)


State 150

   76 contracts_expressions: statement .

    $default  reduce using rule 76 (contracts_expressions)


State 151

   73 invariant_contracts: INVARIANT contracts_expressions .

    $default  reduce using rule 73 (invariant_contracts)


State 152

   51 loops: FROM variable_assignment variable_assignments top_loop UNTIL . statement LOOP code_section bottom_loop END

    INTEGER     shift, and go to state 45
    REAL        shift, and go to state 46
    STRING      shift, and go to state 47
    BOOLEAN     shift, and go to state 48
    DOUBLE      shift, and go to state 49
    OP          shift, and go to state 50
    IDENTIFIER  shift, and go to state 51
    NOT         shift, and go to state 52

    statement          go to state 160
    integer_literal    go to state 54
    real_literal       go to state 55
    string_literal     go to state 56
    double_literal     go to state 57
    boolean_literal    go to state 58
    bool_exp           go to state 59
    bool_term          go to state 60
    bool_factor        go to state 61
    bool_node          go to state 62
    comp_exp           go to state 63
    arithmetic_exp     go to state 64
    arithmetic_term    go to state 65
    arithmetic_factor  go to state 66


State 153

   29 inside_print: possible_inside_print ADD inside_print .

    $default  reduce using rule 29 (inside_print)


State 154

   41 elseif-condition: elseif-condition ELSEIF statement THEN . code_section

    IDENTIFIER  shift, and go to state 27
    IF          shift, and go to state 28
    INSPECT     shift, and go to state 29
    FROM        shift, and go to state 30
    PRINT       shift, and go to state 31

    code_section         go to state 161
    code_section_in      go to state 33
    print_function       go to state 34
    condition            go to state 35
    variable_assignment  go to state 36
    if-condition         go to state 37
    inspect_structure    go to state 38
    loops                go to state 39


State 155

   44 inspect_structure: INSPECT expr when_part_list ELSE code_section END .

    $default  reduce using rule 44 (inspect_structure)


State 156

   47 when_part: WHEN choices THEN . code_section

    IDENTIFIER  shift, and go to state 27
    IF          shift, and go to state 28
    INSPECT     shift, and go to state 29
    FROM        shift, and go to state 30
    PRINT       shift, and go to state 31

    code_section         go to state 162
    code_section_in      go to state 33
    print_function       go to state 34
    condition            go to state 35
    variable_assignment  go to state 36
    if-condition         go to state 37
    inspect_structure    go to state 38
    loops                go to state 39


State 157

   49 choices: literals COMMA . choices

    INTEGER    shift, and go to state 45
    REAL       shift, and go to state 46
    STRING     shift, and go to state 47
    BOOLEAN    shift, and go to state 115
    CHARACTER  shift, and go to state 140
    DOUBLE     shift, and go to state 49

    choices            go to state 163
    literals           go to state 142
    integer_literal    go to state 143
    real_literal       go to state 144
    string_literal     go to state 145
    double_literal     go to state 146
    character_literal  go to state 147
    boolean_literal    go to state 148


State 158

   50 choices: literals DOTS . literals

    INTEGER    shift, and go to state 45
    REAL       shift, and go to state 46
    STRING     shift, and go to state 47
    BOOLEAN    shift, and go to state 115
    CHARACTER  shift, and go to state 140
    DOUBLE     shift, and go to state 49

    literals           go to state 164
    integer_literal    go to state 143
    real_literal       go to state 144
    string_literal     go to state 145
    double_literal     go to state 146
    character_literal  go to state 147
    boolean_literal    go to state 148


State 159

   75 contracts_expressions: IDENTIFIER COLON . statement

    INTEGER     shift, and go to state 45
    REAL        shift, and go to state 46
    STRING      shift, and go to state 47
    BOOLEAN     shift, and go to state 48
    DOUBLE      shift, and go to state 49
    OP          shift, and go to state 50
    IDENTIFIER  shift, and go to state 51
    NOT         shift, and go to state 52

    statement          go to state 165
    integer_literal    go to state 54
    real_literal       go to state 55
    string_literal     go to state 56
    double_literal     go to state 57
    boolean_literal    go to state 58
    bool_exp           go to state 59
    bool_term          go to state 60
    bool_factor        go to state 61
    bool_node          go to state 62
    comp_exp           go to state 63
    arithmetic_exp     go to state 64
    arithmetic_term    go to state 65
    arithmetic_factor  go to state 66


State 160

   51 loops: FROM variable_assignment variable_assignments top_loop UNTIL statement . LOOP code_section bottom_loop END

    LOOP  shift, and go to state 166


State 161

   41 elseif-condition: elseif-condition ELSEIF statement THEN code_section .

    $default  reduce using rule 41 (elseif-condition)


State 162

   47 when_part: WHEN choices THEN code_section .

    $default  reduce using rule 47 (when_part)


State 163

   49 choices: literals COMMA choices .

    $default  reduce using rule 49 (choices)


State 164

   50 choices: literals DOTS literals .

    $default  reduce using rule 50 (choices)


State 165

   75 contracts_expressions: IDENTIFIER COLON statement .

    $default  reduce using rule 75 (contracts_expressions)


State 166

   51 loops: FROM variable_assignment variable_assignments top_loop UNTIL statement LOOP . code_section bottom_loop END

    IDENTIFIER  shift, and go to state 27
    IF          shift, and go to state 28
    INSPECT     shift, and go to state 29
    FROM        shift, and go to state 30
    PRINT       shift, and go to state 31

    code_section         go to state 167
    code_section_in      go to state 33
    print_function       go to state 34
    condition            go to state 35
    variable_assignment  go to state 36
    if-condition         go to state 37
    inspect_structure    go to state 38
    loops                go to state 39


State 167

   51 loops: FROM variable_assignment variable_assignments top_loop UNTIL statement LOOP code_section . bottom_loop END

    VARIANT  shift, and go to state 168

    $default  reduce using rule 54 (bottom_loop)

    bottom_loop        go to state 169
    variant_contracts  go to state 170


State 168

   74 variant_contracts: VARIANT . contracts_expressions

    INTEGER     shift, and go to state 45
    REAL        shift, and go to state 46
    STRING      shift, and go to state 47
    BOOLEAN     shift, and go to state 48
    DOUBLE      shift, and go to state 49
    OP          shift, and go to state 50
    IDENTIFIER  shift, and go to state 149
    NOT         shift, and go to state 52

    statement              go to state 150
    integer_literal        go to state 54
    real_literal           go to state 55
    string_literal         go to state 56
    double_literal         go to state 57
    boolean_literal        go to state 58
    contracts_expressions  go to state 171
    bool_exp               go to state 59
    bool_term              go to state 60
    bool_factor            go to state 61
    bool_node              go to state 62
    comp_exp               go to state 63
    arithmetic_exp         go to state 64
    arithmetic_term        go to state 65
    arithmetic_factor      go to state 66


State 169

   51 loops: FROM variable_assignment variable_assignments top_loop UNTIL statement LOOP code_section bottom_loop . END

    END  shift, and go to state 172


State 170

   55 bottom_loop: variant_contracts .

    $default  reduce using rule 55 (bottom_loop)


State 171

   74 variant_contracts: VARIANT contracts_expressions .

    $default  reduce using rule 74 (variant_contracts)


State 172

   51 loops: FROM variable_assignment variable_assignments top_loop UNTIL statement LOOP code_section bottom_loop END .

    $default  reduce using rule 51 (loops)
